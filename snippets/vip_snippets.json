{
    "vip interface Table":
    {
        "prefix": "$vip_interface_Table",
        "description": "создание VIP интерфейса с гридом данных",
        "body": [
            "interface $TM_FILENAME_BASE '${1:Название интерфейса}' EscClose;",
            "show at (,,170,170);",
            "",
            "var",
            "  _nRec :comp;",
            "  stmt,stmt_str: longInt;",
            "  pMarker :IMarker(marker) new;",
            "  marker :longint;",
            "",
            "table struct tbl_$TM_FILENAME_BASE (",
            "  rec :comp,",
            "  nam :string,",
            "  kol :double",
            ") with index (",
            "  i1 = rec",
            ");",
            "",
            "create view as select * from tbl_$TM_FILENAME_BASE;",
            "",
            "parameters _nRec;",
            "",
            "SCREEN scr_$TM_FILENAME_BASE;",
            "show at (1,1,169,15);",
            "  Fields",
            "    buttons",
            "    cmDo;",
            "    cmRefresh;",
            "",
            "  <<",
            "",
            "       <.   Выполнить   .>     <.   Обновить   .>",
            "  >>",
            "",
            "end;",
            "",
            "browse br_$TM_FILENAME_BASE (,,sci178InsPM);",
            "show (1,16,169,169);",
            "table tbl_$TM_FILENAME_BASE;",
            "recMarker = pMarker{tbl_$TM_FILENAME_BASE.rec};",
            "  fields",
            "  tbl_$TM_FILENAME_BASE.rec 'Нрек' :[10],Protect;",
            "  tbl_$TM_FILENAME_BASE.nam 'Наименование' :[60],Protect;",
            "  tbl_$TM_FILENAME_BASE.kol 'Кол-во' :[5],Protect;",
            "end;",
            "",
            "procedure load_tbl();",
            "{",
            "  StartNewVisual(vtNumericVisual, vfTimer, 'Загрузка данных', 1);",
            "  delete all tbl_$TM_FILENAME_BASE;",
            "",
            "  var frec :comp;",
            "  var fnam :string;",
            "  var fkol :double;",
            "",
            "  stmt := sqlAllocStmt;",
            "  sqlBindCol(stmt, 1, frec);",
            "  sqlBindCol(stmt, 2, fnam);",
            "  sqlBindCol(stmt, 3, fkol);",
            "",
            "  sqlAddStr(stmt_str, ' select ');",
            "  sqlAddStr(stmt_str, ' sf.nRec ');",
            "  sqlAddStr(stmt_str, ' ,sf.RESNAME[1] ');",
            "  sqlAddStr(stmt_str, ' ,sf.RESDOUBLE[1] ');",
            "  sqlAddStr(stmt_str, ' from spformpl sf ');",
            "  sqlAddStr(stmt_str, 'where sf.cformpl = :p_rec');",
            "  sqlPrepare(stmt, stmt_str);",
            "  sqlBindParamByName(stmt, 'p_rec', _nRec);",
            "  sqlExecute(stmt);",
            "",
            "  while sqlFetch(stmt) = tsOk {",
            "  NextVisual();",
            "    insert tbl_$TM_FILENAME_BASE set ",
            "      rec := frec,",
            "      nam := fnam,",
            "      kol := fkol;",
            "  }",
            "",
            "  sqlFreeStr(stmt_str);",
            "  sqlFreeStmt(stmt);",
            "",
            "  rereadrecord(#tbl_$TM_FILENAME_BASE);",
            "  StopVisual();",
            "}",
            "",
            "handleevent",
            "cminit:{",
            "  marker := InitMarker('m_$TM_FILENAME_BASE', 8, 100, 10);",
            "  pMarker.StoreName := 'm_$TM_FILENAME_BASE';",
            "  pMarker.Caption   := (' Отмечено [%d] ');",
            "  load_tbl();",
            "}",
            "",
            "cmRefresh:{",
            "  load_tbl();",
            "}",
            "",
            "cmDone:{",
            "  pMarker.ExportTo(marker);",
            "  DoneMarker(marker, 'm_$TM_FILENAME_BASE');",
            "}",
            "",
            "cmDefault:{",
            "  Abort;",
            "}",
            "",
            "end;",
            "end."
        ]
    },
    "vip interface Param":
    {
        "prefix": "$vip_interface_Param",
        "description": "создание VIP интерфейса для запуска с параметрами",
        "body": [
            "interface $TM_FILENAME_BASE '${1:Название интерфейса}' EscClose;",
            "show at (1, 1, 32, 7);",
            "",
            "var",
            "  _nRec :comp;",
            "  _MODE :longint;",
            "  dat :date;",
            "",
            "table struct tbl_$TM_FILENAME_BASE (",
            "  rec :comp,",
            "  nam :string,",
            "  kol :double",
            ") with index (",
            "  i1 = rec",
            ");",
            "",
            "create view as select * from tbl_$TM_FILENAME_BASE;",
            "",
            "parameters _nRec, _MODE;",
            "",
            "screen s1 '$1';",
            "show at (1, 1, 30, 5)",
            "fields",
            "  _nRec :noprotect;",
            "  dat :noprotect,pickbutton;",
            "  _MODE :noprotect;",
            "buttons",
            "  cmDo;",
            "",
            "  <<",
            "",
            "  нрек:  .@@@@@@@@@@@@@@@@@@@@",
            "  дата:  .@@@@@@@@@@@@@@@@@@@@",
            "  MODE:  .@@@@@@@@@@@@@@@@@@@@",
            "         <.     Do!     .>     ",
            "  `                        `",
            "",
            "  >>",
            "end;",
            "",
            "function f_do():string;{",
            "  result:='done.';$0",
            "}",
            "",
            "handleevent",
            "cmInit:{",
            "}",
            "",
            "cmDo:{",
            "  Message(f_do());",
            "}",
            "end;",
            "end."
        ]
    },
    "window modal":
    {
        "prefix": "$vip_window",
        "description": "модальное окно",
        "body": [
            "//=======================================================",
            "//          $1 <<<<",
            "//=======================================================",
            "window win_$1 'Выбор $1' (,,sci1EnEsc),gray,dialog,doAccept;",
            "show(,,100,15);",
            "BROWSE $1_BROWSE(,,sci1EscIns);",
            "table $1_tbl;",
            "fields",
            "$1_tbl.number 'Номер' :[20],protect;",
            "$1_tbl.name 'Наименование' :[60],protect;",
            "end;",
            "WindowEvent win_$1;",
            "  cminit:{}",
            "  cmDefault:{",
            "    Message('Выбрали : ' + $1_tbl.name + ' (' + $1_tbl.nRec + ')')",
            "  } ",
            "  end;",
            "end;",
            "//=======================================================",
            "//          >>>> $1",
            "//=======================================================",
            "",
            "procedure runWindow$1();{ ",
            "  RunWindowModal(win_$1);",
            "}"
        ]
    },
    "table struct":
    {
        "prefix": "$vip_table",
        "description": "локальная таблица",
        "body": [
            "Table struct $1_tbl (",
            "  nn :longint,",
            "  nRec :comp,",
            "  mcRec :comp,",
            "  mcName :string",
            ") with index (",
            "  i1 = nRec,",
            "  i2 = nn + mcName",
            ");"
        ]
    },
    "screen":
    {
        "prefix": "$vip_screen",
        "description": "screen",
        "body": [
            "Screen s$1;",
            "show at (1,1,169,8) fixed_x;",
            "fields",
            "  dateStart, noprotect, PickButton;",
            "  dateEnd, noprotect, PickButton;",
            "  isShowDone, noprotect;",
            "buttons",
            "  cmGo;",
            "  cmCancel;",
            "",
            "<<",
            "      Выбор периода",
            "      с .@@@@@@@@@@@     по .@@@@@@@@@@@",
            "      `                                        `",
            "      [.] Выполненные`",
            "",
            "      <.  Выгрузить  .>   <.   Закрыть   .>",
            "`                                       `   ",
            ">>",
            "end;"
        ]
    },
    "browser":
    {
        "prefix": "$vip_browser",
        "description": "browser",
        "body": [
            "Browse b$1;",
            "  show at(1,9,169,169)",
            "  table $1_tbl;",
            "  fields {Font= {backColor = if($1_tbl.cRec != comp(0), ColorSysGray, ColorSysWhite);",
            "    Color = if($1_tbl.cRec != comp(0), ColorSysWhite, ColorSysBlack);}};",
            "  $1_tbl.mcName 'МЦ' :[30],protect;",
            "  $1_tbl.kol 'Кол-во' :[5,2],protect;",
            "  $1_tbl.status 'Статус' :[15],protect;",
            "end;"
        ]
    },
    "query":
    {
        "prefix": "$vip_sql",
        "description": "прямой SQL",
        "body": [
            "sql query qrMcDo = ",
            "  select",
            "    b.noDoc,",
            "    b.dDoc,",
            "    mc.name nameMC",
            "  from",
            "    basedoc b",
            "    join stepdoc sd on sd.cbasedoc = b.nrec",
            "    join spstep st on st.cstepdoc = sd.nrec and st.prmc = 1",
            "    left join katmc mc on mc.nrec = st.cmcusl",
            "  where",
            "    b.nrec = :p_nRec;",
            "",
            "procedure feelYMRC(nRec :comp);{",
            "  var pQuery: IQuery = QueryManager.CreateQuery(qrMcDo);",
            "  pQuery.setParam('p_nRec', nRec);",
            "  var pResultSet: IResultSet = pQuery.getResultSet;",
            "  if pQuery.errorCode <> tsOk then  {",
            "    WriteMessageLog('Ошибка выполнения запроса: ' + string(pQuery.errorCode));",
            "    exit;",
            "  }",
            "",
            "  if pResultSet.Count = 0 then {",
            "    WriteMessageLog('Нет данных по запросу');",
            "    exit;",
            "  }",
            "",
            "  //true - поля по именам , false - поля по порядку(в этом случае перечень полей в запросе и таблице должен быть одинаков)",
            "  var iErrorCode :integer = sqlCopyInto(pResultSet, #tempTable, true);",
            "",
            "  if iErrorCode != 0 then {",
            "    WriteMessageLog('Ошибка получения данных по запросу: ' + string(iErrorCode));",
            "    exit;",
            "  } else {",
            "    WriteMessageLog('Запрос выполнен');",
            "  }",
            "",
            "  /*в цикле",
            "  do {",
            "    clearbuffer(#tempTable);",
            "    set tempTable.noDoc:= pResultSet.row.val('noDoc');",
            "    set tempTable.nameMc:= pResultSet.row.val('nameMc');",
            "    insert current tempTable;",
            "  } while pResultSet.getNext = tsOK  ",
            "  */",
            "  /*одно значение",
            "    result:= pQuery.getResultValue;",
            "  */",
            "}"
        ]
    }
}